#!/bin/dash
# Created by Nikil Singh z5209322

if ! test $# -ge 2 -a $# -le 3
then
    echo "ARGUEMENTS"
    echo "usage: legit-commit [-a] -m commit-message"
    exit 1
fi

# Gets message based on the number of arguements given.
if test $# -eq 2
then
    tmpMessage=$2
    mFlag=$1
else
    tmpMessage=$3
    mFlag=$1
    aFlag=$2
fi

# Removes all whitespace from message.
message=`echo $tmpMessage | sed 's/ *//g'`

#Checks if message is empty.
if test -z $message
then
    echo "MESSAGE"
    echo "usage: legit-commit [-a] -m commit-message"
    exit 1
fi

# Checks if given flags are correct.
if test $# -eq 2
then
    # Checks if -m flag is present.
    if test $mFlag != "-m"
    then
        echo "2 ARGS"
        echo "usage: legit-commit [-a] -m commit-message"
        exit 1
    fi
else
    # Checks if -m and -a flags are present in correct order.
    if test $mFlag != "-a" -a $aFlag != "-m"
    then
        echo "usage: legit-commit [-a] -m commit-message"
        exit 1
    fi
fi

# Gets number of files to be added.
numFiles=`ls -l .legit/.index/master/| egrep -c ^-`
# Gets number of previous commits.
numCommits=`ls -l .legit/.prev/master/| egrep -c ^d`

# Checks if number of files in index is 0, then output error  message.
if test $numFiles -eq 0
then
    echo "nothing to commit"
    exit 1
fi

# Since flags are correct, and to account for the -a flag the following
# moves the required files over.


# Checks if prevCommit is a negative, in which case there are no previous commits.
if ls -l .legit/.prev/master/| egrep -c ^d > /dev/null
then
    # Sets previous commit number to be one less than total commits as they start
    # from 0.
    prevCommit=`expr $numCommits - 1`

    # Gets number of files in previous commit.
    numFilesPrev=`ls -l .legit/.prev/master/$prevCommit/*| egrep -c ^-`

    # Checks if same number of files exist in previous commits and index, then checks
    # if all the files are the same and if their contents have changed. If the
    # content hasn't changed, then it outputs an error message.
    if test $numCommits -gt 0 -a $numFiles -eq $numFilesPrev
    then
        dif=0
        # Cycles through all files in previous commit.
        for file in .legit/.prev/master/$prevCommit/*
        do
            fileName=`echo $file | sed 's/^.*[/]//g'`
            # Checks if file exists.
            if test -e .legit/.index/master/$fileName
            then
                # Checks if files have different content.
                if ! diff .legit/.index/master/$fileName $file > /dev/null
                then
                    dif=1
                fi
            fi
        done
        # If files don't have different content then it outputs an error message.
        if test $dif -eq 0
        then
            echo "nothing to commit"
            exit 1
        fi
    fi
fi
# Creates directory for commit, where commits begin from 0.
mkdir .legit/.prev/master/$numCommits

# Starts copying over the contents of index to a folder for version control.
for file in .legit/.index/master/*
do
    cp $file ".legit/.prev/master/$numCommits"
done

# Updates the commit log.
echo "$numCommits $tmpMessage" >> .legit/.prev/master/commitLog.txt
echo "Committed as commit $numCommits"
